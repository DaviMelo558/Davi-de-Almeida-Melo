// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecodeTrip.Data;

namespace RecodeTrip.Migrations
{
    [DbContext(typeof(ViagemContext))]
    partial class ViagemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RecodeTrip.Models.Cliente", b =>
                {
                    b.Property<int>("Id_cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Celular")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_completo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViagemId_viagem")
                        .HasColumnType("int");

                    b.HasKey("Id_cliente");

                    b.HasIndex("ViagemId_viagem");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("RecodeTrip.Models.Companhia", b =>
                {
                    b.Property<int>("Id_companhia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nota_avaliacao")
                        .HasColumnType("int");

                    b.HasKey("Id_companhia");

                    b.ToTable("Companhias");
                });

            modelBuilder.Entity("RecodeTrip.Models.Viagem", b =>
                {
                    b.Property<int>("Id_viagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanhiaId_companhia")
                        .HasColumnType("int");

                    b.Property<string>("Data_ida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id_viagem");

                    b.HasIndex("CompanhiaId_companhia");

                    b.ToTable("Viagens");
                });

            modelBuilder.Entity("RecodeTrip.Models.Cliente", b =>
                {
                    b.HasOne("RecodeTrip.Models.Viagem", "Viagem")
                        .WithMany()
                        .HasForeignKey("ViagemId_viagem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Viagem");
                });

            modelBuilder.Entity("RecodeTrip.Models.Viagem", b =>
                {
                    b.HasOne("RecodeTrip.Models.Companhia", "Companhia")
                        .WithMany()
                        .HasForeignKey("CompanhiaId_companhia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companhia");
                });
#pragma warning restore 612, 618
        }
    }
}
